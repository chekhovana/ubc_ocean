#model_name: tf_efficientnetv2_m
#batch_size: 32

#model_name: resnet18
#batch_size: 64

#model_name: &model_name swin_base_patch4_window12_384
#model_name: &model_name swin_base_patch4_window7_224
#batch_size: &batch_size 64

num_epochs: 300



#logdir: logs
#checkpoint_dir: ${logdir}/checkpoints

model:
  _target_: ubc_ocean.model.mil.MilAttentionMulticlassModel
  backbone:
    _target_: timm.create_model
    model_name: resnet34
    num_classes: 0
    pretrained: true
  batch_size: 128

data:
  image_folder: data/tiles/thumbnails/size_256_overlap_10_threshold_50
  annotation_file: data/original/annotations/train.csv
  batch_size: 1
  image_size: 256

  loaders:
    train:
      _target_: torch.utils.data.DataLoader
      dataset:
        _target_: ubc_ocean.data.dataset.OnlineFeatureDataset
        image_folder: ${image_folder}
        annotation_file: ${annotation_file}
        mode: train
        transforms:
          _target_: albumentations.Compose
          transforms:
            - _target_: albumentations.LongestMaxSize
              max_size: ${image_size}
            - _target_: albumentations.PadIfNeeded
              min_height: ${image_size}
              min_width: ${image_size}
              border_mode: 0 # cv2.BORDER_CONSTANT:
            - _target_: albumentations.Normalize
            - _target_: albumentations.pytorch.transforms.ToTensorV2
      batch_size: ${batch_size}
      shuffle: False
#  valid:
#    _target_: torch.utils.data.DataLoader
#    dataset:
#      _target_: dataset.CroppedTowerDataset
#      image_folder: ${image_folder}
#      annotation_filename: ${annotations[valid]}
#      mode: valid
#      category_id: ${category_id}
#      attribute_ids: ${attribute_ids}
#      transforms:
#        _target_: transforms.get_transforms
#        mode: valid
#        image_size: ${image_size}
#    batch_size: ${batch_size}
#
#model:
#  _target_: commons.classification.multihead.MultiheadModel
#  model_name: ${model_name}
#  num_classes: ${data[num_classes]}
#
#criterion:
#  _target_: torch.nn.CrossEntropyLoss
#
#optimizer:
#  _target_: torch.optim.Adam
#  _partial_: true
#  lr: 0.0001
#
#scheduler:
#  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
#  _partial_: true
#  mode: min
#  factor: 0.7
#
